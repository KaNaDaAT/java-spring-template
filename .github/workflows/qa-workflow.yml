name: Quality Assurance

#This are the most important CI settings
env:
  post_review_stats: true


on:
  pull_request:
    branches:
      - master
      - dev
      - main
      - staging
      - hotfix
    types: [ labeled ]
  push:
    branches:
      - master
      - dev
      - main
      - staging
      - hotfix

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || github.event.label.name == 'ready for build' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: prepare gradle
        run: chmod +x gradlew
      - name: compile
        run: ./gradlew clean jar
      - name: store build
        uses: actions/upload-artifact@v2
        with:
          name: base-build
          path: |
            build
            */build
          retention-days: 1
  quality-check:
    runs-on: ubuntu-latest
    name: Quality Check
    needs: build
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - name: download build
        uses: actions/download-artifact@v2
        with:
          name: base-build
      - name: install java
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: prepare gradle
        run: chmod +x gradlew
      - uses: gradle/wrapper-validation-action@v1
  testing:
    runs-on: ubuntu-latest
    name: Testing
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch Refs
        if: github.event_name == 'pull_request'
        run: git fetch origin ${{ github.base_ref }}
      - name: download build
        uses: actions/download-artifact@v2
        with:
          name: base-build
      - name: install java
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: prepare gradle
        run: chmod +x gradlew
      - name: run tests
        run: ./gradlew test
      - name: check code coverage
        run: ./gradlew check
      - name: print produced files
        run: ls */build/reports/ */build/libs */build/reports/jacoco
        continue-on-error: true
      - name: upload sonarqube report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonarqube --info
  review:
    runs-on: ubuntu-latest
    needs:
      - quality-check
      - testing
    name: Review
    if: ${{ github.event_name == 'pull_request'}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Add success message
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: |
            ## QA passed!
            The automatic quality check passed.

            Your pull request is ready for review.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Approve pull request
        if: github.actor == 'dependabot[bot]'
        uses: andrewmusgrave/automatic-pull-request-review@0.0.5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          event: APPROVE
          body: 'Thank you dependabot ðŸŽŠ'
      - name: Post review stats
        if: ${{ env.post_review_stats && github.actor != 'dependabot[bot]'}}
        uses: flowwer-dev/pull-request-stats@master
        with:
          charts: true
      - name: 
  openapi_diff:
    runs-on: ubuntu-latest
    name: OAS Diff
    needs: review
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build PR OAS
        run: |
          ./gradlew generateOpenApiDocs
          cp openapi.json ~/openapi_head.json
      - name: Checkout base branch
        run: git checkout ${{ github.base_ref }}
      - name: Read BASE OAS
        run: cp openapi.json ~/openapi_base.json
      - name: Checkout PR
        uses: actions/checkout@v2
      - name: Build OAS diff
        uses: LimeFlight/openapi-diff-action@v3.0.9
        with:
          head_spec: ~/openapi_head.json
          base_spec: ~/openapi_base.json
          output_path: ~/openapi_diff.json
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Commit OAS
        uses: swinton/commit@v2.0.0
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            openapi.json
          commit-message: 'docs(oas): add PR changes to OAS'
          ref: ${{ github.head_ref }}