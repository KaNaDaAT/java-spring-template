name: Process PR

on:
  pull_request:
    types: [ synchronize, edited, ready_for_review ]
    branches:
      - master
      - main
      - staging
  pull_request_target:
    types: [ synchronize, edited, ready_for_review ]
    branches:
      - dev
      - hotfix


jobs:
  unlabel:
    runs-on: ubuntu-latest
    if: ${{ !(github.event.pull_request.head.repo.full_name != github.repository && github.actor != 'dependabot[bot]' && github.base_ref != 'dev' && github.base_ref != 'hotfix') }}
    steps:
      - uses: actions/checkout@v2
      - name: remove label
        if: github.actor != 'dependabot[bot]'
        uses: peter-murray/remove-labels-action@v1.0.0
        with:
          labels: "ready for build"
        continue-on-error: true
  formal_check:
    name: "Formal Check"
    runs-on: "ubuntu-latest"
    needs:
      - unlabel
    steps:
      - uses: actions/checkout@v2
      - name: check PR name
        id: name_check
        run: |
          RGX='^((build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test|bump)(\(\w+\))?!?:\s.+)$'
          if [[ "${{ github.event.pull_request.title }}" =~ $RGX ]]; then
            echo "PR title is valid"
            echo "::set-output name=nameValid::true"
          else
            echo "PR title is invalid"
            echo "::set-output name=nameValid::false"
            exit 1
          fi
      - name: Find old "wrong title" message
        uses: sandeshjangam/comment-actions@v1
        id: find_title_comment
        with:
          type: "find"
          search_term: "Title invalid"
          author: "github-actions"
          number: ${{ github.event.pull_request.number }}
      - name: remove old "wrong title" message
        uses: sandeshjangam/comment-actions@v1
        if: ${{ steps.find_title_comment.outputs.comment_id != '' }}
        with:
          type: "delete"
          comment_id: ${{ steps.find_title_comment.outputs.comment_id }}
      - name: add "wrong title" message
        if: always() && !(steps.name_check.outputs.nameValid == 'true')
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: |
            ## Title invalid
            The PR title must obey the conventional-commits ([here](https://www.conventionalcommits.org/en/v1.0.0-beta.1/)) standard!
            ### Examples
            ```
            fix(ci): Fix broken build
            feat(api): Add API feature
            test: improve test coverage
            pref(db): Improve database performance
            ```
            > Change the title to match the conventional-commits standard.
            > Your PR will be re-validated when you change the title.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: check changed files
        uses: tony84727/changed-file-filter@v0.2.0
        id: filter
        with:
          filters: |
            sensitive:
              - '.github/**'
              - '.gitignore'
              - '.gitmodules'
              - 'gradle/wrapper/**'
              - '**.gradle'
              - 'gradle'
              - 'gradlew'
              - 'gradlew.bat'

      ##todo: update label instead of re-creation
      - name: add security label
        if: steps.filter.outputs.sensitive == 'true'
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['sensitive']
            })
      - name: Find old "security" message
        uses: sandeshjangam/comment-actions@v1
        id: find_sec_comment
        with:
          type: "find"
          author: "github-actions"
          search_term: "This PR contains sensitive files."
          number: ${{ github.event.pull_request.number }}
      - name: remove old "security" message
        uses: sandeshjangam/comment-actions@v1
        if: ${{ steps.find_sec_comment.outputs.comment_id != '' && steps.filter.outputs.sensitive == 'false'}}
        with:
          type: "delete"
          comment_id: ${{ steps.find_sec_comment.outputs.comment_id }}
      - name: add security message
        if: steps.filter.outputs.sensitive == 'true' && steps.find_sec_comment.outputs.comment_id == ''
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: |
            ## Security
            This PR contains sensitive files.
            ```
            ${{ steps.filter.outputs.sensitive_files }}
            ```
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: update security message
        if: steps.filter.outputs.sensitive == 'true' && steps.find_sec_comment.outputs.comment_id != ''
        uses: thollander/actions-comment-pull-request@v1
        with:
          type: "update"
          body: |
            ## Security
            This PR contains sensitive files.
            ```
            ${{ steps.filter.outputs.sensitive_files }}
            ```
          comment_id: ${{ steps.find_sec_comment.outputs.comment_id }}
      - name: label by changed files
        uses: actions/labeler@v3
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: label by branch
        uses: ffittschen/pr-branch-labeler@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Mark as ready
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['ready for build']
            })